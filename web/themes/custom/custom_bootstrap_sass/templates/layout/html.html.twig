{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - path_info.args: Array of URL arguments un aliassed.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 *
 * @see template_preprocess_html()
 */
#}
{%
  set body_classes = [
	  'page-wapper',
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'node--type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
  ]
%}
<!DOCTYPE html>
<html{{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;600;700&display=swap" rel="stylesheet">
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
      <script src="https://cdn.jsdelivr.net/gh/studio-freight/lenis@1.0.23/bundled/lenis.min.js"></script>
      <script defer>
        //Lenis
        const lenis = new Lenis(
        )
        function raf(time) {
          lenis.raf(time)
          requestAnimationFrame(raf)
        }
        requestAnimationFrame(raf)
      </script>
      </head>
  <body{{ attributes.addClass(body_classes) }}>
    <div class="page-wrapper" id="smooth-wrapper">
      <div id="smooth-content">
        <a href="#main-content" class="visually-hidden focusable skip-link">
          {{ 'Skip to main content'|t }}
        </a>

        {{ page_top }}
        {{ page }}
        {{ page_bottom }}
      </div>
    </div>
	<js-bottom-placeholder token="{{ placeholder_token|raw }}">
  </body>
  <script type="module" src="https://unpkg.com/@splinetool/viewer@1.0.66/build/spline-viewer.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  <script>

    //Logo
    var vh = window.innerHeight
    var tl = gsap.timeline()
    var logo = document.getElementById('js-logo')

    tl.to(logo, {
      scrollTrigger: {
        trigger: '.logo--3d',
        start: 'top',
        scrub: 1,
        end: "+=500",
      },
      y: vh + 200,
      x: 200,
      ease: "none"
    })

    //Text reveal
    var textReveal = document.getElementById('js-text-reveal')
      var characters = textReveal.innerHTML.split('')
      textReveal.innerHTML = ''
      characters.forEach(function (el) {
        var span = document.createElement('span')
        span.classList.add('reveal-span')
        var content = document.createTextNode(el)
        span.appendChild(content)
        textReveal.appendChild(span)
      })

    gsap.to('.reveal-span', {
      scrollTrigger: {
        trigger: '.about',
        start: '-100px center',
        end: 'bottom center',
        scrub: 1
      },
      opacity: 1,
      stagger: 1,
    })

    gsap.to('.js-about-el', {
      scrollTrigger: {
        trigger: '.about',
        start: '-500px 200px',
        end: 'bottom 200px',
        scrub: 1
      },
      y: gsap.utils.wrap(['+=160', '+=320', '+=80']),
      rotate: gsap.utils.wrap(['180deg', '90deg', '0'])
    })

    //Service
    gsap.from('.hoop--service', {
      scrollTrigger: {
        trigger: '.section--service',
        start: '-500px center',
        end: '1000px center',
        scrub: true,
      },
      y: 600
    })

    gsap.from('.service-row', {
      scrollTrigger: {
        trigger: '.section--service',
        start: '-240px center',
        end: '400px center',
        scrub: true,
        markers: true
      },
      ease: 'ease-out',
      x: gsap.utils.wrap(['100%', '-100%']),
      stagger: 1,
    })

    gsap.to('.service-img--star', {
      scrollTrigger: {
        trigger: '.section--service',
        start: '-100px center',
        end: 'bottom center',
        scrub: 1
      },
      rotate: 90
    })

    //view home image carousel
    const projects = document.querySelector('.home-projects')
    const projectRows = document.querySelectorAll('.home-projects .views-row')
    const projectImgs = document.querySelectorAll('.home-projects-img .views-row')

    projectRows.forEach((el, index) => {
      el.addEventListener('mouseenter', () => {
        projectImgs.forEach((img) => {
          img.classList.remove('active')
        })
        gsap.to(logo, {
          scale: 0
        })
        projectImgs[index].classList.add('active')
      })
    })
    projects.addEventListener('mouseleave', () => {
      projectImgs.forEach((img) => {
        img.classList.remove('active')
      })
      gsap.to(logo, {
        scale: 1,
        delay: .4
      })
    })

    //mouse overlay
    $('body').mousemove(function( event ) {
      var styles_img = {
        "left" : event.pageX - 60,
        "top" : event.pageY - 60
      }
      $('.mouse-overlay').css(styles_img)
    })
    $('.customCursor').hover(function (){
      $('.mouse-overlay--eye').toggleClass('is-visable')
    })

    //menu //jQuery deleten
    $('.menu-link').each(function (index) {
      var characters = $(this).text().split("")
      $this = $(this)
      $this.empty()
      $.each(characters, function (i, el) {
        $this.append('<span class="letter">' + el + '</span>')
      })
    })

    var tween = gsap.fromTo(
      ".menu-link>span",
      {
        opacity: 0,
        y: -100
      },
      {
        opacity: 1,
        duration: .5,
        stagger: .02,
        y: 0,
        easing: 'ease-in',
      })
    tween.reverse()

    $('.nav-menu-btn').click(function(){
      $('.menu').toggleClass("is-active")
      $("html, body").animate({ scrollTop: 0, height: "100vh" }, "slow")
      tween.play()
    })
  </script>
</html>
